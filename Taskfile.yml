version: "3"

includes:
  utils: "utility-tasks.yml"

vars:
  # Paths
  G_BUILD_DIR: "{{.TASKFILE_DIR}}/build"
  G_DOCS_OUTPUT_DIR: "{{.G_BUILD_DIR}}/html"
  G_VENV_DIR: "{{.G_BUILD_DIR}}/venv"

tasks:
  default:
    deps: ["docs"]

  clean:
    cmds:
      - "rm -rf '{{.G_BUILD_DIR}}'"

  docs:
    deps:
      - task: "utils:validate-checksum"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          DATA_DIR: "{{.OUTPUT_DIR}}"
      - "venv"
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "{{.G_DOCS_OUTPUT_DIR}}"
    cmds:
      - |
        . "{{.G_VENV_DIR}}/bin/activate"
        sphinx-build -a -E -c docs -b html docs "{{.OUTPUT_DIR}}"
      # This command must be last
      - task: "utils:compute-checksum"
        vars:
          DATA_DIR: "{{.OUTPUT_DIR}}"
          OUTPUT_FILE: "{{.CHECKSUM_FILE}}"
    sources:
      - "docs/**/*"
      - "{{.G_BUILD_DIR}}/venv.md5"
    generates: ["{{.CHECKSUM_FILE}}"]

  download-projects:
    deps: ["venv"]
    cmds:
      - |-
        . "{{.G_VENV_DIR}}/bin/activate"
        python3 scripts/download-projects.py --build-dir "{{.G_BUILD_DIR}}"

  release-tar:
    deps: ["docs"]
    vars:
      OUTPUT_DIR_NAME: "yscope-docs-release"
      OUTPUT_DIR: "{{.G_BUILD_DIR}}/{{.OUTPUT_DIR_NAME}}"
      SITE_PUBLIC_DIR: "{{.OUTPUT_DIR}}/public"
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - "mkdir -p '{{.OUTPUT_DIR}}'"
      - >-
        rsync
        --archive
        --relative
        conf/projects.json
        server/.env
        server/src
        server/package.json
        server/package-lock.json
        server/README.md
        "{{.OUTPUT_DIR}}"
      - "mkdir '{{.SITE_PUBLIC_DIR}}'"
      - "rsync -a '{{.G_BUILD_DIR}}/html' {{.SITE_PUBLIC_DIR}}"
      - |-
        cd "{{.G_BUILD_DIR}}"
        find -type d -regex ".*/build/docs/html" -exec \
          rsync \
          --archive \
          --relative \
          {} \
          "{{.SITE_PUBLIC_DIR}}" \
          \;
      - >-
        tar czf "{{.G_BUILD_DIR}}/{{.OUTPUT_DIR_NAME}}.tar.gz" --directory "{{.OUTPUT_DIR}}/.."
        "{{.OUTPUT_DIR_NAME}}"

  serve:
    dir: "server"
    deps:
      - "docs"
      - "server"
    cmds:
      - "PUBLIC_DIR='{{.G_BUILD_DIR}}' npm run dev"

  server:
    internal: true
    dir: "server"
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "node_modules"
    deps:
      - task: "utils:validate-checksum"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          DATA_DIR: "{{.OUTPUT_DIR}}"
    cmds:
      - "rm -rf '{{.OUTPUT_DIR}}'"
      - "npm install"
      # This command must be last
      - task: "utils:compute-checksum"
        vars:
          DATA_DIR: "{{.OUTPUT_DIR}}"
          OUTPUT_FILE: "{{.CHECKSUM_FILE}}"
    sources:
      - "{{.TASKFILE}}"
      - "package.json"
    generates: ["{{.CHECKSUM_FILE}}"]

  venv:
    internal: true
    vars:
      CHECKSUM_FILE: "{{.G_BUILD_DIR}}/{{.TASK}}.md5"
      OUTPUT_DIR: "{{.G_VENV_DIR}}"
    deps:
      - task: "utils:validate-checksum"
        vars:
          CHECKSUM_FILE: "{{.CHECKSUM_FILE}}"
          DATA_DIR: "{{.OUTPUT_DIR}}"
    cmds:
      - task: "utils:create-venv"
        vars:
          LABEL: "venv"
          OUTPUT_DIR: "{{.OUTPUT_DIR}}"
          REQUIREMENTS_FILE: "requirements.txt"
      # This command must be last
      - task: "utils:compute-checksum"
        vars:
          DATA_DIR: "{{.OUTPUT_DIR}}"
          OUTPUT_FILE: "{{.CHECKSUM_FILE}}"
    sources:
      - "{{.TASKFILE}}"
      - "requirements.txt"
    generates: ["{{.CHECKSUM_FILE}}"]
